{"version":3,"sources":["canvas-display.js"],"names":["CanvasDisplay","transitive","options","el","canvas","setDimensions","width","height","setCanvas","clientWidth","clientHeight","document","createElement","appendChild","window","devicePixelRatio","makeCanvasHiPPI","ctx","getContext","clearRect","upperLeft","attrs","strokeStyle","lineWidth","fillStyle","beginPath","rx","ry","x","y","rect","closePath","fill","stroke","center","arc","r","Math","PI","renderData","length","arr","split","map","parseFloat","str","trim","setLineDash","lineCap","moveTo","i","rd","arcTo","ex","ey","radius","lineTo","text","anchor","textBaseline","font","fontSize","fontFamily","textAlign","globalAlpha","strokeText","fillText","PIXEL_RATIO","style","context","scale"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;;;IAEqBA,a;;;AACnB,yBAAaC,UAAb,EAAyB;AAAA;;AAAA,oJACjBA,UADiB;;AAAA,8BAGAA,WAAWC,OAHX;AAAA,QAGfC,EAHe,uBAGfA,EAHe;AAAA,QAGXC,MAHW,uBAGXA,MAHW;;AAKvB;;AACA,QAAIA,MAAJ,EAAY;AACV;AACA,YAAKC,aAAL,CAAmBD,OAAOE,KAA1B,EAAiCF,OAAOG,MAAxC;AACA,YAAKC,SAAL,CAAeJ,MAAf;;AAEF;AACC,KAND,MAMO,IAAID,EAAJ,EAAQ;AACb,YAAKE,aAAL,CAAmBF,GAAGM,WAAtB,EAAmCN,GAAGO,YAAtC;;AAEA,UAAMN,UAASO,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACAR,cAAOE,KAAP,GAAeH,GAAGM,WAAlB;AACAL,cAAOG,MAAP,GAAgBJ,GAAGO,YAAnB;AACAP,SAAGU,WAAH,CAAeT,OAAf;;AAEA;AACA,UAAIU,OAAOC,gBAAP,GAA0B,CAA9B,EAAiCC,gBAAgBZ,OAAhB;;AAEjC,YAAKI,SAAL,CAAeJ,OAAf;AACD;AAxBsB;AAyBxB;;;;8BAEUA,M,EAAQ;AACjB,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKa,GAAL,GAAW,KAAKb,MAAL,CAAYc,UAAZ,CAAuB,IAAvB,CAAX;AACD;;;4BAEQ;AACP,WAAKD,GAAL,CAASE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKf,MAAL,CAAYE,KAArC,EAA4C,KAAKF,MAAL,CAAYG,MAAxD;AACD;;;6BAESa,S,EAAWC,K,EAAO;AAC1B,WAAKJ,GAAL,CAASK,WAAT,GAAuBD,MAAM,QAAN,CAAvB;AACA,WAAKJ,GAAL,CAASM,SAAT,GAAqBF,MAAM,cAAN,CAArB;AACA,WAAKJ,GAAL,CAASO,SAAT,GAAqBH,MAAM,MAAN,CAArB;;AAEA,WAAKJ,GAAL,CAASQ,SAAT;AACA,UAAIJ,MAAMK,EAAN,IAAYL,MAAMM,EAAlB,IAAwBN,MAAMK,EAAN,KAAaL,MAAMM,EAA/C,EAAmD;AACjD,mCAAY,KAAKV,GAAjB,EAAsBG,UAAUQ,CAAhC,EAAmCR,UAAUS,CAA7C,EAAgDR,MAAMf,KAAtD,EAA6De,MAAMd,MAAnE,EAA2Ec,MAAMK,EAAjF;AACA;AACD,OAHD,MAGO;AAAE;AACP,aAAKT,GAAL,CAASa,IAAT,CAAcV,UAAUQ,CAAxB,EAA2BR,UAAUS,CAArC,EAAwCR,MAAMf,KAA9C,EAAqDe,MAAMd,MAA3D;AACD;AACD,WAAKU,GAAL,CAASc,SAAT;;AAEA,UAAIV,MAAM,MAAN,CAAJ,EAAmB,KAAKJ,GAAL,CAASe,IAAT;AACnB,UAAIX,MAAM,QAAN,CAAJ,EAAqB,KAAKJ,GAAL,CAASgB,MAAT;AACtB;;;+BAEWC,M,EAAQb,K,EAAO;AACzB,WAAKJ,GAAL,CAASQ,SAAT;AACA,WAAKR,GAAL,CAASkB,GAAT,CAAaD,OAAON,CAApB,EAAuBM,OAAOL,CAA9B,EAAiCR,MAAMe,CAAvC,EAA0C,CAA1C,EAA6CC,KAAKC,EAAL,GAAU,CAAvD,EAA0D,IAA1D;AACA,WAAKrB,GAAL,CAASc,SAAT;;AAEA,UAAIV,MAAM,MAAN,CAAJ,EAAmB;AACjB,aAAKJ,GAAL,CAASO,SAAT,GAAqBH,MAAM,MAAN,CAArB;AACA,aAAKJ,GAAL,CAASe,IAAT;AACD;AACD,UAAIX,MAAM,QAAN,CAAJ,EAAqB;AACnB,aAAKJ,GAAL,CAASK,WAAT,GAAuBD,MAAM,QAAN,CAAvB;AACA,aAAKJ,GAAL,CAASM,SAAT,GAAqBF,MAAM,cAAN,KAAyB,CAA9C;AACA,aAAKJ,GAAL,CAASgB,MAAT;AACD;AACF;;;gCAEYC,M,EAAQb,K,EAAO;AAC1B;AACD;;;6BAESkB,U,EAAYlB,K,EAAO;AAC3B,UAAI,CAACkB,UAAD,IAAeA,WAAWC,MAAX,KAAsB,CAAzC,EAA4C;;AAE5C;AACA,WAAKvB,GAAL,CAASK,WAAT,GAAuBD,MAAM,QAAN,CAAvB;AACA,WAAKJ,GAAL,CAASM,SAAT,GAAqBF,MAAM,cAAN,CAArB;;AAEA;AACA,UAAIA,MAAM,kBAAN,CAAJ,EAA+B;AAC7B,YAAMoB,MAAMpB,MAAM,kBAAN,EAA0BqB,KAA1B,CAAgC,GAAhC,EAAqCC,GAArC,CAAyC;AAAA,iBAAOC,WAAWC,IAAIC,IAAJ,EAAX,CAAP;AAAA,SAAzC,CAAZ;AACA,aAAK7B,GAAL,CAAS8B,WAAT,CAAqBN,GAArB;AACD;;AAED;AACA,WAAKxB,GAAL,CAAS+B,OAAT,GAAmB3B,MAAM,gBAAN,KAA2B,MAA9C;;AAEA;AACA,WAAKJ,GAAL,CAASQ,SAAT;AACA,WAAKR,GAAL,CAASgC,MAAT,CAAgBV,WAAW,CAAX,EAAcX,CAA9B,EAAiCW,WAAW,CAAX,EAAcV,CAA/C;AACA,WAAK,IAAIqB,IAAI,CAAb,EAAgBA,IAAIX,WAAWC,MAA/B,EAAuCU,GAAvC,EAA4C;AAC1C,YAAMC,KAAKZ,WAAWW,CAAX,CAAX;AACA,YAAIC,GAAGhB,GAAP,EAAY,KAAKlB,GAAL,CAASmC,KAAT,CAAeD,GAAGE,EAAlB,EAAsBF,GAAGG,EAAzB,EAA6BH,GAAGvB,CAAhC,EAAmCuB,GAAGtB,CAAtC,EAAyCsB,GAAGI,MAA5C,EAAZ,KACK,KAAKtC,GAAL,CAASuC,MAAT,CAAgBL,GAAGvB,CAAnB,EAAsBuB,GAAGtB,CAAzB;AACN;AACD,WAAKZ,GAAL,CAASgB,MAAT;;AAEA;AACA,UAAIZ,MAAM,kBAAN,CAAJ,EAA+B,KAAKJ,GAAL,CAAS8B,WAAT,CAAqB,EAArB;AAChC;;;6BAESU,I,EAAMC,M,EAAQrC,K,EAAO;AAC7B;AACA,WAAKJ,GAAL,CAAS0C,YAAT,GAAwB,KAAxB;;AAEA,WAAK1C,GAAL,CAAS2C,IAAT,IAAmBvC,MAAMwC,QAAN,IAAkB,MAArC,WAA+CxC,MAAMyC,UAAN,IAAoB,YAAnE;AACA,UAAIzC,MAAM,aAAN,CAAJ,EAA0B,KAAKJ,GAAL,CAAS8C,SAAT,GAAqB1C,MAAM,aAAN,CAArB;;AAE1B,UAAIA,MAAM,QAAN,CAAJ,EAAqB;AACnB,aAAKJ,GAAL,CAASK,WAAT,GAAuBD,MAAM,QAAN,CAAvB;AACA,YAAIA,MAAM,gBAAN,CAAJ,EAA6B,KAAKJ,GAAL,CAAS+C,WAAT,GAAuB3C,MAAM,gBAAN,CAAvB;AAC7B,aAAKJ,GAAL,CAASM,SAAT,GAAqBF,MAAM,cAAN,KAAyB,CAA9C;AACA,aAAKJ,GAAL,CAASgD,UAAT,CAAoBR,IAApB,EAA0BC,OAAO9B,CAAjC,EAAoC8B,OAAO7B,CAA3C;AACD;AACD,UAAIR,MAAM,MAAN,CAAJ,EAAmB;AACjB,aAAKJ,GAAL,CAASO,SAAT,GAAqBH,MAAM,MAAN,CAArB;AACA,YAAIA,MAAM,cAAN,CAAJ,EAA2B,KAAKJ,GAAL,CAAS+C,WAAT,GAAuB3C,MAAM,cAAN,CAAvB;AAC3B,aAAKJ,GAAL,CAASiD,QAAT,CAAkBT,IAAlB,EAAwBC,OAAO9B,CAA/B,EAAkC8B,OAAO7B,CAAzC;AACD;;AAED,WAAKZ,GAAL,CAAS8C,SAAT,GAAqB,OAArB;AACA,WAAK9C,GAAL,CAAS+C,WAAT,GAAuB,CAAvB;AACD;;;;;AAGH;;;kBAjIqBhE,a;AAkIrB,SAASgB,eAAT,CAA0BZ,MAA1B,EAAkC;AAChC,MAAM+D,cAAc,CAApB;AACA/D,SAAOgE,KAAP,CAAa9D,KAAb,GAAqBF,OAAOE,KAAP,GAAe,IAApC;AACAF,SAAOgE,KAAP,CAAa7D,MAAb,GAAsBH,OAAOG,MAAP,GAAgB,IAAtC;;AAEAH,SAAOE,KAAP,IAAgB6D,WAAhB;AACA/D,SAAOG,MAAP,IAAiB4D,WAAjB;;AAEA,MAAIE,UAAUjE,OAAOc,UAAP,CAAkB,IAAlB,CAAd;AACAmD,UAAQC,KAAR,CAAcH,WAAd,EAA2BA,WAA3B;AACD","file":"canvas-display.js","sourcesContent":["import roundedRect from 'rounded-rect'\n\nimport Display from './display'\n\nexport default class CanvasDisplay extends Display {\n  constructor (transitive) {\n    super(transitive)\n\n    const { el, canvas } = transitive.options\n\n    // Handle case of externally-provided canvas\n    if (canvas) {\n      // Set internal dimensions to match those of canvas\n      this.setDimensions(canvas.width, canvas.height)\n      this.setCanvas(canvas)\n\n    // We have a DOM element; create canvas\n    } else if (el) {\n      this.setDimensions(el.clientWidth, el.clientHeight)\n\n      const canvas = document.createElement('canvas')\n      canvas.width = el.clientWidth\n      canvas.height = el.clientHeight\n      el.appendChild(canvas)\n\n      // Check for Hi-PPI display\n      if (window.devicePixelRatio > 1) makeCanvasHiPPI(canvas)\n\n      this.setCanvas(canvas)\n    }\n  }\n\n  setCanvas (canvas) {\n    this.canvas = canvas\n    this.ctx = this.canvas.getContext('2d')\n  }\n\n  clear () {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n  }\n\n  drawRect (upperLeft, attrs) {\n    this.ctx.strokeStyle = attrs['stroke']\n    this.ctx.lineWidth = attrs['stroke-width']\n    this.ctx.fillStyle = attrs['fill']\n\n    this.ctx.beginPath()\n    if (attrs.rx && attrs.ry && attrs.rx === attrs.ry) {\n      roundedRect(this.ctx, upperLeft.x, upperLeft.y, attrs.width, attrs.height, attrs.rx)\n      // TODO: handle case where rx != ry\n    } else { // ordinary rectangle\n      this.ctx.rect(upperLeft.x, upperLeft.y, attrs.width, attrs.height)\n    }\n    this.ctx.closePath()\n\n    if (attrs['fill']) this.ctx.fill()\n    if (attrs['stroke']) this.ctx.stroke()\n  }\n\n  drawCircle (center, attrs) {\n    this.ctx.beginPath()\n    this.ctx.arc(center.x, center.y, attrs.r, 0, Math.PI * 2, true)\n    this.ctx.closePath()\n\n    if (attrs['fill']) {\n      this.ctx.fillStyle = attrs['fill']\n      this.ctx.fill()\n    }\n    if (attrs['stroke']) {\n      this.ctx.strokeStyle = attrs['stroke']\n      this.ctx.lineWidth = attrs['stroke-width'] || 1\n      this.ctx.stroke()\n    }\n  }\n\n  drawEllipse (center, attrs) {\n    // TODO: implement\n  }\n\n  drawPath (renderData, attrs) {\n    if (!renderData || renderData.length === 0) return\n\n    // Apply stroke/width styles\n    this.ctx.strokeStyle = attrs['stroke']\n    this.ctx.lineWidth = attrs['stroke-width']\n\n    // Apply line-dash style, if present\n    if (attrs['stroke-dasharray']) {\n      const arr = attrs['stroke-dasharray'].split(',').map(str => parseFloat(str.trim()))\n      this.ctx.setLineDash(arr)\n    }\n\n    // Apply linecap style\n    this.ctx.lineCap = attrs['stroke-linecap'] || 'butt'\n\n    // Draw the path\n    this.ctx.beginPath()\n    this.ctx.moveTo(renderData[0].x, renderData[0].y)\n    for (let i = 1; i < renderData.length; i++) {\n      const rd = renderData[i]\n      if (rd.arc) this.ctx.arcTo(rd.ex, rd.ey, rd.x, rd.y, rd.radius)\n      else this.ctx.lineTo(rd.x, rd.y)\n    }\n    this.ctx.stroke()\n\n    // Revert line-dash style to default\n    if (attrs['stroke-dasharray']) this.ctx.setLineDash([])\n  }\n\n  drawText (text, anchor, attrs) {\n    // For equivalence w/ SVG text rendering\n    this.ctx.textBaseline = 'top'\n\n    this.ctx.font = `${attrs.fontSize || '14px'} ${attrs.fontFamily || 'sans-serif'}`\n    if (attrs['text-anchor']) this.ctx.textAlign = attrs['text-anchor']\n\n    if (attrs['stroke']) {\n      this.ctx.strokeStyle = attrs['stroke']\n      if (attrs['stroke-opacity']) this.ctx.globalAlpha = attrs['stroke-opacity']\n      this.ctx.lineWidth = attrs['stroke-width'] || 1\n      this.ctx.strokeText(text, anchor.x, anchor.y)\n    }\n    if (attrs['fill']) {\n      this.ctx.fillStyle = attrs['fill']\n      if (attrs['fill-opacity']) this.ctx.globalAlpha = attrs['fill-opacity']\n      this.ctx.fillText(text, anchor.x, anchor.y)\n    }\n\n    this.ctx.textAlign = 'start'\n    this.ctx.globalAlpha = 1\n  }\n}\n\n// Utility function to support HiPPI displays (e.g. Retina)\nfunction makeCanvasHiPPI (canvas) {\n  const PIXEL_RATIO = 2\n  canvas.style.width = canvas.width + 'px'\n  canvas.style.height = canvas.height + 'px'\n\n  canvas.width *= PIXEL_RATIO\n  canvas.height *= PIXEL_RATIO\n\n  var context = canvas.getContext('2d')\n  context.scale(PIXEL_RATIO, PIXEL_RATIO)\n}\n"]}