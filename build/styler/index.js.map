{"version":3,"sources":["index.js"],"names":["types","svgAttributes","Styler","styles","reset","load","i","type","key","Array","isArray","concat","display","segment","lineGraphHalo","applyAttrAndStyle","segments_halo","lineGraph","segments","lineGraphFront","segments_front","wfEdge","svgGroup","selectAll","wireframe_edges","point","getType","styleStop","stylePlace","styleMultiPoint","styleWireframeVertex","stop","patternMarkers","stops_pattern","mergedMarker","stops_merged","labels","place","places","places_icon","multipoint","multipoints_pattern","multipoints_merged","wfVertex","wireframe_vertices","pointType","toLowerCase","label","segment_label_containers","segment_labels","elements","attributes","name","rules","fn","indexOf","applyRules","self","data","index","compute","computed","rule","val","isFunction","call","utils","undefined","mode","modeStyles","focused","isFocused","route","route_type","agency_id","route_id","route_short_name","route_long_name","pattern","addPattern","patterns","attrName","Object","prototype","toString"],"mappings":"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","file":"index.js","sourcesContent":["import Route from '../core/route'\nimport RoutePattern from '../core/pattern'\nimport { otpModeToGtfsType } from '../util'\n\nimport styles from './styles'\n\n/**\n * Element Types\n */\n\nvar types = [\n  'labels',\n  'segments',\n  'segments_front',\n  'segments_halo',\n  'segment_labels',\n  'segment_label_containers',\n  'stops_merged',\n  'stops_pattern',\n  'places',\n  'places_icon',\n  'multipoints_merged',\n  'multipoints_pattern',\n  'wireframe_vertices',\n  'wireframe_edges'\n]\n\n/**\n * SVG attributes\n */\n\nvar svgAttributes = [\n  'height',\n  'target',\n  'title',\n  'width',\n  'y1',\n  'y2',\n  'x1',\n  'x2',\n  'cx',\n  'cy',\n  'dx',\n  'dy',\n  'rx',\n  'ry',\n  'd',\n  'r',\n  'y',\n  'x',\n  'transform'\n]\n\n/**\n * Styler object\n */\n\nexport default class Styler {\n\n  constructor (styles) {\n    if (!(this instanceof Styler)) return new Styler(styles)\n\n    // reset styles\n    this.reset()\n\n    // load styles\n    if (styles) this.load(styles)\n  }\n\n  /**\n   * Clear all current styles\n   */\n\n  clear () {\n    for (var i in types) {\n      this[types[i]] = {}\n    }\n  }\n\n  /**\n   * Reset to the predefined styles\n   */\n\n  reset () {\n    for (var i in types) {\n      var type = types[i]\n      this[type] = Object.assign({}, styles[type] || {})\n      for (var key in this[type]) {\n        if (!Array.isArray(this[type][key])) this[type][key] = [this[type][key]]\n      }\n    }\n  }\n\n  /**\n   * Load rules\n   *\n   * @param {Object} a set of style rules\n   */\n\n  load (styles) {\n    for (var i in types) {\n      var type = types[i]\n      if (styles[type]) {\n        for (var key in styles[type]) {\n          this[type][key] = (this[type][key] || []).concat(styles[type][key])\n        }\n      }\n    }\n  }\n\n  /**\n   * Style a Segment using the rules defined in styles.js or the Transitive options\n   *\n   * @param {Display} Transitive Display object\n   * @param {RenderedSegment} Transitive RenderedSegment object\n   */\n\n  styleSegment (display, segment) {\n    if (segment.lineGraphHalo) {\n      this.applyAttrAndStyle(\n        display,\n        segment.lineGraphHalo,\n        this.segments_halo\n      )\n    }\n\n    this.applyAttrAndStyle(\n      display,\n      segment.lineGraph,\n      this.segments\n    )\n\n    this.applyAttrAndStyle(\n      display,\n      segment.lineGraphFront,\n      this.segments_front\n    )\n  }\n\n  /**\n   * Style a WireframeEdge using the rules defined in styles.js or the Transitive options\n   *\n   * @param {Display} Transitive Display object\n   * @param {WireframeEdge} Transitive WireframeEdge object\n   */\n\n  styleWireframeEdge (display, wfEdge) {\n    this.applyAttrAndStyle(\n      display,\n      wfEdge.svgGroup.selectAll('.transitive-wireframe-edge-line'),\n      this.wireframe_edges\n    )\n  }\n\n  /**\n   * Style a Point using the rules defined in styles.js or the Transitive options\n   *\n   * @param {Display} Transitive Display object\n   * @param {Point} Transitive Point object\n   */\n\n  stylePoint (display, point) {\n    if (point.getType() === 'STOP') this.styleStop(display, point)\n    if (point.getType() === 'PLACE') this.stylePlace(display, point)\n    if (point.getType() === 'MULTI') this.styleMultiPoint(display, point)\n    if (point.getType() === 'WIREFRAME_VERTEX') this.styleWireframeVertex(display, point)\n  }\n\n  /**\n   * Style a Stop using the rules defined in styles.js or the Transitive options\n   *\n   * @param {Display} Transitive Display object\n   * @param {Stop} Transitive Stop object\n   */\n\n  styleStop (display, stop) {\n    this.applyAttrAndStyle(\n      display,\n      stop.patternMarkers,\n      this.stops_pattern\n    )\n\n    this.applyAttrAndStyle(\n      display,\n      stop.mergedMarker,\n      this.stops_merged\n    )\n\n    this.applyAttrAndStyle(\n      display,\n      stop.svgGroup.selectAll('.transitive-stop-label'),\n      this.labels\n    )\n  }\n\n  /**\n   * Style a Place using the rules defined in styles.js or the Transitive options\n   *\n   * @param {Display} Transitive Display object\n   * @param {Place} Transitive Place object\n   */\n\n  stylePlace (display, place) {\n    this.applyAttrAndStyle(\n      display,\n      place.svgGroup.selectAll('.transitive-place-circle'),\n      this.places\n    )\n\n    this.applyAttrAndStyle(\n      display,\n      place.svgGroup.selectAll('.transitive-place-icon'),\n      this.places_icon\n    )\n\n    this.applyAttrAndStyle(\n      display,\n      place.svgGroup.selectAll('.transitive-place-label'),\n      this.labels\n    )\n  }\n\n  /**\n   * Style a MultiPoint using the rules defined in styles.js or the Transitive options\n   *\n   * @param {Display} Transitive Display object\n   * @param {MultiPoint} Transitive MultiPoint object\n   */\n\n  styleMultiPoint (display, multipoint) {\n    this.applyAttrAndStyle(\n      display,\n      multipoint.svgGroup.selectAll('.transitive-multipoint-marker-pattern'),\n      this.multipoints_pattern\n    )\n\n    this.applyAttrAndStyle(\n      display,\n      multipoint.svgGroup.selectAll('.transitive-multipoint-marker-merged'),\n      this.multipoints_merged\n    )\n\n    this.applyAttrAndStyle(\n      display,\n      multipoint.svgGroup.selectAll('.transitive-multi-label'),\n      this.labels\n    )\n  }\n\n  /**\n   * Style a WireframeVertex using the rules defined in styles.js or the Transitive options\n   *\n   * @param {Display} Transitive Display object\n   * @param {WireframeVertex} Transitive WireframeVertex object\n   */\n\n  styleWireframeVertex (display, wfVertex) {\n    this.applyAttrAndStyle(\n      display,\n      wfVertex.svgGroup.selectAll('.transitive-wireframe-vertex-circle'),\n      this.wireframe_vertices\n    )\n  }\n\n  /**\n   * Style a Point label using the rules defined in styles.js or the Transitive options\n   *\n   * @param {Display} Transitive Display object\n   * @param {Point} Transitive Point object\n   */\n\n  stylePointLabel (display, point) {\n    var pointType = point.getType().toLowerCase()\n\n    this.applyAttrAndStyle(\n      display,\n      point.svgGroup.selectAll('.transitive-' + pointType + '-label'),\n      this.labels\n    )\n  }\n\n  /**\n   * Style a Segment label using the rules defined in styles.js or the Transitive options\n   *\n   * @param {Display} Transitive Display object\n   * @param {SegmentLabel} Transitive SegmentLabel object\n   */\n\n  styleSegmentLabel (display, label) {\n    this.applyAttrAndStyle(\n      display,\n      label.svgGroup.selectAll('.transitive-segment-label-container'),\n      this.segment_label_containers\n    )\n    this.applyAttrAndStyle(\n      display,\n      label.svgGroup.selectAll('.transitive-segment-label'),\n      this.segment_labels\n    )\n  }\n\n  /**\n   * Check if it's an attribute or a style and apply accordingly\n   *\n   * @param {Display} the Display object\n   * @param {Object} a D3 list of elements\n   * @param {Object} the list of attributes\n   */\n\n  applyAttrAndStyle (display, elements, attributes) {\n    for (var name in attributes) {\n      var rules = attributes[name]\n      var fn = svgAttributes.indexOf(name) === -1 ? 'style' : 'attr'\n\n      this.applyRules(display, elements, name, rules, fn)\n    }\n  }\n\n  /**\n   * Apply style/attribute rules to a list of elements\n   *\n   * @param {Display} display object\n   * @param {Object} elements\n   * @param {String} rule name\n   * @param {Array} rules\n   * @param {String} style/attr\n   */\n\n  applyRules (display, elements, name, rules, fn) {\n    var self = this\n    elements[fn](name, function (data, index) {\n      return self.compute(rules, display, data, index)\n    })\n  }\n\n  /**\n   * Compute a style rule based on the current display and data\n   *\n   * @param {Array} array of rules\n   * @param {Object} the Display object\n   * @param {Object} data associated with this object\n   * @param {Number} index of this object\n   */\n\n  compute (rules, display, data, index) {\n    var computed\n    var self = this\n    for (var i in rules) {\n      var rule = rules[i]\n      var val = isFunction(rule)\n        ? rule.call(self, display, data, index, styles.utils)\n        : rule\n      if (val !== undefined && val !== null) computed = val\n    }\n    return computed\n  }\n\n  /**\n   * Return the collection of default segment styles for a mode.\n   *\n   * @param {String} an OTP mode string\n   */\n\n  getModeStyles (mode, display) {\n    var modeStyles = {}\n\n    // simulate a segment w/ the specified style\n    var segment = {\n      focused: true,\n      isFocused: function () {\n        return true\n      }\n    }\n\n    if (mode === 'WALK' || mode === 'BICYCLE' || mode === 'BICYCLE_RENT' || mode === 'CAR') {\n      segment.type = mode\n    } else { // assume a transit mode\n      segment.type = 'TRANSIT'\n      segment.mode = otpModeToGtfsType(mode)\n      var route = new Route({\n        route_type: segment.mode,\n        agency_id: '',\n        route_id: '',\n        route_short_name: '',\n        route_long_name: ''\n      })\n      var pattern = new RoutePattern({})\n      route.addPattern(pattern)\n      segment.patterns = [pattern]\n    }\n\n    for (var attrName in this.segments) {\n      var rules = this.segments[attrName]\n      for (var i in rules) {\n        var rule = rules[i]\n        var val = isFunction(rule)\n          ? rule.call(this, display, segment, 0, styles.utils)\n          : rule\n        if (val !== undefined && val !== null) {\n          modeStyles[attrName] = val\n        }\n      }\n    }\n\n    return modeStyles\n  }\n}\n\n/**\n * Is function?\n */\n\nfunction isFunction (val) {\n  return Object.prototype.toString.call(val) === '[object Function]'\n}\n"]}