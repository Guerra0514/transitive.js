{"version":3,"sources":["wireframe-renderer.js"],"names":["WireframeRenderer","display","transitive","graph","network","edges","renderData","edge","getRenderCoords","drawPath","fill","stroke","vertices","drawCircle","x","xScale","vertex","y","yScale","r"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;AACA;;;;AAEA;;;;;;;IAOqBA,iB;;;;;;;;;;6BACT;AACR;;AADQ,UAGAC,OAHA,GAGY,KAAKC,UAHjB,CAGAD,OAHA;AAAA,UAIAE,KAJA,GAIU,KAAKD,UAAL,CAAgBE,OAJ1B,CAIAD,KAJA;;AAMR;;AACA,2BAAQA,MAAME,KAAd,EAAqB,gBAAQ;AAC3B;AACA,YAAMC,aAAaC,KAAKC,eAAL,CAAqB,CAArB,EAAwB,CAAxB,EAA2BP,OAA3B,EAAoC,IAApC,CAAnB;;AAEAA,gBAAQQ,QAAR,CAAiB,+BAAoBH,UAApB,CAAjB,EAAkD;AAChDI,gBAAM,MAD0C;AAEhD,0BAAgB,CAFgC;AAGhDC,kBAAQ,MAHwC;AAIhD,8BAAoB;AAJ4B,SAAlD;AAMD,OAVD;;AAYA;AACA,2BAAQR,MAAMS,QAAd,EAAwB,kBAAU;AAChCX,gBAAQY,UAAR,CAAmB;AACjBC,aAAGb,QAAQc,MAAR,CAAeC,OAAOF,CAAtB,CADc;AAEjBG,aAAGhB,QAAQiB,MAAR,CAAeF,OAAOC,CAAtB;AAFc,SAAnB,EAGG;AACDE,aAAG,CADF;AAEDT,gBAAM;AAFL,SAHH;AAOD,OARD;AASD;;;;;kBA9BkBV,iB","file":"wireframe-renderer.js","sourcesContent":["import { forEach } from 'lodash'\n\nimport Renderer from './renderer'\nimport { renderDataToSvgPath } from '../util'\n\n/**\n * A Renderer subclass for drawing a simplified representation of the graph\n * itself, i.e. just the edges and vertices.\n *\n * @param {Object} the main Transitive object\n */\n\nexport default class WireframeRenderer extends Renderer {\n  render () {\n    super.render()\n\n    const { display } = this.transitive\n    const { graph } = this.transitive.network\n\n    // Draw the edges\n    forEach(graph.edges, edge => {\n      // Get a basic, non-offset edge renderData array\n      const renderData = edge.getRenderCoords(0, 0, display, true)\n\n      display.drawPath(renderDataToSvgPath(renderData), {\n        fill: 'none',\n        'stroke-width': 2,\n        stroke: '#000',\n        'stroke-dasharray': '4,2'\n      })\n    })\n\n    // Draw the vertices\n    forEach(graph.vertices, vertex => {\n      display.drawCircle({\n        x: display.xScale(vertex.x),\n        y: display.yScale(vertex.y)\n      }, {\n        r: 4,\n        fill: '#000'\n      })\n    })\n  }\n}\n"]}