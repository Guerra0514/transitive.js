{"version":3,"sources":["route.js"],"names":["Route","data","key","patterns","pattern","push","route","route_color","charAt"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;IAKqBA,K;AACnB,iBAAaC,IAAb,EAAmB;AAAA;;AACjB,SAAK,IAAIC,GAAT,IAAgBD,IAAhB,EAAsB;AACpB,UAAIC,QAAQ,UAAZ,EAAwB;AACxB,WAAKA,GAAL,IAAYD,KAAKC,GAAL,CAAZ;AACD;;AAED,SAAKC,QAAL,GAAgB,EAAhB;AACD;;AAED;;;;;;;;+BAMYC,O,EAAS;AACnB,WAAKD,QAAL,CAAcE,IAAd,CAAmBD,OAAnB;AACAA,cAAQE,KAAR,GAAgB,IAAhB;AACD;;;+BAEW;AACV,UAAI,KAAKC,WAAT,EAAsB;AACpB,YAAI,KAAKA,WAAL,CAAiBC,MAAjB,CAAwB,CAAxB,MAA+B,GAAnC,EAAwC,OAAO,KAAKD,WAAZ;AACxC,eAAO,MAAM,KAAKA,WAAlB;AACD;;AAED;AACA;;;;;AAOD;;;;;kBAnCkBP,K","file":"route.js","sourcesContent":["/**\n * A transit Route, as defined in the input data.\n * Routes contain one or more Patterns.\n */\n\nexport default class Route {\n  constructor (data) {\n    for (var key in data) {\n      if (key === 'patterns') continue\n      this[key] = data[key]\n    }\n\n    this.patterns = []\n  }\n\n  /**\n   * Add Pattern\n   *\n   * @param {Pattern}\n   */\n\n  addPattern (pattern) {\n    this.patterns.push(pattern)\n    pattern.route = this\n  }\n\n  getColor () {\n    if (this.route_color) {\n      if (this.route_color.charAt(0) === '#') return this.route_color\n      return '#' + this.route_color\n    }\n\n    // assign a random shade of gray\n    /* var c = 128 + Math.floor(64 * Math.random());\n    var hex = c.toString(16);\n    hex = (hex.length === 1) ? '0' + hex : hex;\n\n    this.route_color = '#' + hex + hex + hex;\n\n    return this.route_color; */\n  }\n}\n"]}