{"version":3,"sources":["patterngroup.js"],"names":["PatternGroup","patterns","fromIndexLookup","toIndexLookup","pattern","fromIndex","toIndex","indexOf","push","pattern_id"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;IAIqBA,Y;AACnB,0BAAe;AAAA;;AACb,SAAKC,QAAL,GAAgB,EAAhB;;AAEA;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACD;;;;+BAEWC,O,EAASC,S,EAAWC,O,EAAS;AACvC,UAAI,KAAKL,QAAL,CAAcM,OAAd,CAAsBH,OAAtB,MAAmC,CAAC,CAAxC,EAA2C;AACzC,aAAKH,QAAL,CAAcO,IAAd,CAAmBJ,OAAnB;AACA,aAAKF,eAAL,CAAqBE,QAAQK,UAA7B,IAA2CJ,SAA3C;AACA,aAAKF,aAAL,CAAmBC,QAAQK,UAA3B,IAAyCH,OAAzC;AACD;AACF;;;iCAEaF,O,EAAS;AACrB,aAAO,KAAKF,eAAL,CAAqBE,QAAQK,UAA7B,CAAP;AACD;;;+BAEWL,O,EAAS;AACnB,aAAO,KAAKD,aAAL,CAAmBC,QAAQK,UAA3B,CAAP;AACD;;;;;kBAvBkBT,Y","file":"patterngroup.js","sourcesContent":["/**\n * PatternGroup -- a collection of one or more RoutePatterns associated with\n * a PathSegment\n */\nexport default class PatternGroup {\n  constructor () {\n    this.patterns = []\n\n    // lookup tables mapping pattern IDs to their from/to indices in the containing PathSegment\n    this.fromIndexLookup = {}\n    this.toIndexLookup = {}\n  }\n\n  addPattern (pattern, fromIndex, toIndex) {\n    if (this.patterns.indexOf(pattern) === -1) {\n      this.patterns.push(pattern)\n      this.fromIndexLookup[pattern.pattern_id] = fromIndex\n      this.toIndexLookup[pattern.pattern_id] = toIndex\n    }\n  }\n\n  getFromIndex (pattern) {\n    return this.fromIndexLookup[pattern.pattern_id]\n  }\n\n  getToIndex (pattern) {\n    return this.toIndexLookup[pattern.pattern_id]\n  }\n}\n"]}