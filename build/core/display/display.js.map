{"version":3,"sources":["display.js"],"names":["debug","require","Display","transitive","el","svgContainer","options","updateDimensions","zoom","behavior","scaleExtent","zoomBehavior","computeScale","scale","lastScale","zoomChanged","setTimeout","refresh","bind","llb","llBounds","on","zoomFactors","getDefaultZoomFactors","console","log","svg","div","select","attr","zoomEnabled","call","append","xScale","linear","yScale","autoResize","window","resized","bounds","initialBounds","forward","network","graph","setScale","updateActiveZoomFactors","mapboxId","tileLayer","display","legendEl","legend","emit","render","updated","i","length","min","minScale","max","Number","MAX_VALUE","activeZoomFactors","data","gridCellSize","internalVertexFactor","angleConstraint","mergeVertexThreshold","selectAll","remove","haloLayer","insert","domains","getDomains","height","width","domain","range","x","y","initXRes","scaleSet","newXRes","clientHeight","clientWidth","newWidth","newHeight","xDomain","xFactor","xDomainAdj","yDomain","yFactor","yDomainAdj","inverse","xRange","yRange","xmin","xmax","ymin","ymax","paddingFactor","margins","getMargins","usableHeight","top","bottom","usableWidth","left","right","displayAspect","usableDisplayAspect","graphAspect","Infinity","padding","dispX1","dispX2","dispY1","dispY2","dispXRange","dispYRange","addedYRange","xOffset","xMidpoint","addedXRange","yOffset","yMidpoint","displayMargins"],"mappings":"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","file":"display.js","sourcesContent":["const debug = require('debug')('transitive:display')\n\nimport d3 from 'd3'\n\nimport Legend from './legend'\nimport TileLayer from './tile-layer'\nimport { sm } from '../util'\n\n/**\n * The D3-based SVG display.\n */\n\nexport default class Display {\n  /**\n   * Display constructor\n   *\n   * @param {Object} options\n   */\n\n  constructor (transitive) {\n    this.transitive = transitive\n    if (transitive.el) this.el = transitive.el\n    else this.svgContainer = transitive.options.svgContainer\n    this.updateDimensions()\n\n    // Set up the pan/zoom behavior\n    var zoom = this.zoom = d3.behavior.zoom().scaleExtent([0.25, 4])\n\n    const zoomBehavior = () => {\n      this.computeScale()\n      if (this.scale !== this.lastScale) { // zoom action\n        this.zoomChanged()\n      } else { // pan action\n        setTimeout(transitive.refresh.bind(transitive, true), 0)\n      }\n\n      var llb = this.llBounds()\n      debug(`ll bounds: ${llb[0][0]}, ${llb[0][1]} to ${llb[1][0]}, ${llb[1][1]}`)\n    }\n\n    this.zoom.on('zoom.transitive', zoomBehavior)\n\n    this.zoomFactors = transitive.options.zoomFactors || this.getDefaultZoomFactors()\n\n    // set up the svg display\n\n    console.log('trn opts', transitive.options);\n    if (transitive.options.svg && transitive.options.svgContainer) {\n      console.log('using supplied svg');\n      this.svg = transitive.options.svg\n    } else {\n      const div = d3.select(this.el).attr('class', 'Transitive')\n      if (transitive.options.zoomEnabled) div.call(zoom)\n      this.svg = div.append('svg')\n    }\n    this.svg.attr('class', 'schematic-map')\n\n    // initialize the x/y scale objects\n    this.xScale = d3.scale.linear()\n    this.yScale = d3.scale.linear()\n\n    // set up the resize event handler\n    if (transitive.options.autoResize) {\n      d3.select(window).on('resize.display', () => {\n        this.resized()\n        transitive.refresh()\n      })\n    }\n\n    // set the scale\n    var bounds\n    if (transitive.options.initialBounds) {\n      bounds = [sm.forward(transitive.options.initialBounds[0]),\n        sm.forward(transitive.options.initialBounds[1])\n      ]\n    } else if (transitive.network && transitive.network.graph) {\n      bounds = transitive.network.graph.bounds()\n    }\n\n    if (bounds) {\n      this.setScale(bounds, transitive.options)\n      this.updateActiveZoomFactors(this.scale)\n      this.lastScale = this.scale\n    } else {\n      this.updateActiveZoomFactors(1)\n    }\n\n    // set up the map layer\n    if (transitive.options.mapboxId) {\n      this.tileLayer = new TileLayer({\n        el: this.el,\n        display: this,\n        graph: transitive.graph,\n        mapboxId: transitive.options.mapboxId\n      })\n    }\n\n    // set up the legend\n    if (transitive.options.legendEl) {\n      this.legend = new Legend(transitive.options.legendEl, this, transitive)\n    }\n\n    transitive.emit('initialize display', transitive, this)\n    return this\n  }\n\n  /**\n   * zoomChanged -- called when the zoom level changes, either by through the native\n   * zoom support or the setBounds() API call. Updates zoom factors as needed and\n   * performs appropriate update action (render or refresh)\n   */\n\n  zoomChanged () {\n    if (this.updateActiveZoomFactors(this.scale)) {\n      this.transitive.network = null\n      this.transitive.render()\n    } else this.transitive.refresh()\n    this.lastScale = this.scale\n  }\n\n  updateActiveZoomFactors (scale) {\n    var updated = false\n    for (var i = 0; i < this.zoomFactors.length; i++) {\n      var min = this.zoomFactors[i].minScale\n      var max = (i < this.zoomFactors.length - 1)\n        ? this.zoomFactors[i + 1].minScale\n        : Number.MAX_VALUE\n\n      // check if we've crossed into a new zoomFactor partition\n      if ((!this.lastScale || this.lastScale < min || this.lastScale >= max) &&\n        scale >= min && scale < max) {\n        this.activeZoomFactors = this.zoomFactors[i]\n        updated = true\n      }\n    }\n    return updated\n  }\n\n  /**\n   * Return default zoom factors\n   */\n\n  getDefaultZoomFactors (data) {\n    return [{\n      minScale: 0,\n      gridCellSize: 25,\n      internalVertexFactor: 1000000,\n      angleConstraint: 45,\n      mergeVertexThreshold: 200\n    }, {\n      minScale: 1.5,\n      gridCellSize: 0,\n      internalVertexFactor: 0,\n      angleConstraint: 5,\n      mergeVertexThreshold: 0\n    }]\n  }\n\n  /**\n   * Empty the display\n   */\n\n  empty () {\n    debug('emptying svg')\n    this.svg.selectAll('*').remove()\n\n    this.haloLayer = this.svg.insert('g', ':first-child')\n  }\n\n  /**\n   * Set the scale\n   */\n\n  setScale (bounds, options) {\n    this.updateDimensions()\n\n    var domains = getDomains(this, this.height, this.width, bounds, options)\n    this.xScale.domain(domains[0])\n    this.yScale.domain(domains[1])\n\n    this.xScale.range([0, this.width])\n    this.yScale.range([this.height, 0])\n\n    debug('x scale %j -> %j', this.xScale.domain(), this.xScale.range())\n    debug('y scale %j -> %j', this.yScale.domain(), this.yScale.range())\n\n    this.zoom\n      .x(this.xScale)\n      .y(this.yScale)\n\n    this.initXRes = (domains[0][1] - domains[0][0]) / this.width\n    this.scale = 1\n\n    this.scaleSet = true\n  }\n\n  computeScale () {\n    var newXRes = (this.xScale.domain()[1] - this.xScale.domain()[0]) / this.width\n    this.scale = this.initXRes / newXRes\n  }\n\n  /** updateDimensions -- compute the width/height of the display */\n\n  updateDimensions () {\n    if (this.el) {\n      this.height = this.el.clientHeight\n      this.width = this.el.clientWidth\n    } else {\n      console.log(this.svgContainer);\n      this.height = this.svgContainer.clientHeight\n      this.width = this.svgContainer.clientWidth\n    }\n  }\n\n  /**\n   * updateDomains -- set x/y domains of geographic (spherical mercator) coordinate\n   * system. Does *not* check/adjust aspect ratio.\n   */\n\n  updateDomains (bounds) {\n    console.log('updateDomains', bounds);\n    this.xScale.domain([bounds[0][0], bounds[1][0]])\n    this.yScale.domain([bounds[0][1], bounds[1][1]])\n\n    this.zoom\n      .x(this.xScale)\n      .y(this.yScale)\n\n    this.computeScale()\n  }\n\n  resized () {\n    var newWidth = this.el.clientWidth\n    var newHeight = this.el.clientHeight\n\n    var xDomain = this.xScale.domain()\n    var xFactor = newWidth / this.width\n    var xDomainAdj = (xDomain[1] - xDomain[0]) * (xFactor - 1) / 2\n    this.xScale.domain([xDomain[0] - xDomainAdj, xDomain[1] + xDomainAdj])\n\n    var yDomain = this.yScale.domain()\n    var yFactor = newHeight / this.height\n    var yDomainAdj = (yDomain[1] - yDomain[0]) * (yFactor - 1) / 2\n    this.yScale.domain([yDomain[0] - yDomainAdj, yDomain[1] + yDomainAdj])\n\n    this.xScale.range([0, newWidth])\n    this.yScale.range([newHeight, 0])\n\n    this.height = newHeight\n    this.width = newWidth\n\n    this.zoom\n      .x(this.xScale)\n      .y(this.yScale)\n  }\n\n  xyBounds () {\n    var x = this.xScale.domain()\n    var y = this.yScale.domain()\n    return [\n      [x[0], y[0]],\n      [x[1], y[1]]\n    ]\n  }\n\n  /**\n   * Lat/lon bounds\n   */\n\n  llBounds () {\n    var x = this.xScale.domain()\n    var y = this.yScale.domain()\n\n    return [\n      sm.inverse([x[0], y[0]]),\n      sm.inverse([x[1], y[1]])\n    ]\n  }\n\n  isInRange (x, y) {\n    var xRange = this.xScale.range()\n    var yRange = this.yScale.range()\n\n    return x >= xRange[0] && x <= xRange[1] && y >= yRange[1] && y <= yRange[0]\n  }\n}\n\n/**\n * Compute the x/y coordinate space domains to fit the graph.\n */\n\nfunction getDomains (display, height, width, bounds, options) {\n  var xmin = bounds[0][0]\n  var xmax = bounds[1][0]\n  var ymin = bounds[0][1]\n  var ymax = bounds[1][1]\n  var xRange = xmax - xmin\n  var yRange = ymax - ymin\n\n  var paddingFactor = (options && options.paddingFactor)\n    ? options.paddingFactor\n    : 0.1\n\n  var margins = getMargins(options)\n\n  var usableHeight = height - margins.top - margins.bottom\n  var usableWidth = width - margins.left - margins.right\n  var displayAspect = width / height\n  var usableDisplayAspect = usableWidth / usableHeight\n  var graphAspect = xRange / (yRange === 0 ? -Infinity : yRange)\n\n  var padding\n  var dispX1, dispX2, dispY1, dispY2\n  var dispXRange, dispYRange\n\n  if (usableDisplayAspect > graphAspect) { // y-axis is limiting\n    padding = paddingFactor * yRange\n    dispY1 = ymin - padding\n    dispY2 = ymax + padding\n    dispYRange = yRange + 2 * padding\n    var addedYRange = (height / usableHeight * dispYRange) - dispYRange\n    if (margins.top > 0 || margins.bottom > 0) {\n      dispY1 -= margins.bottom / (margins.bottom + margins.top) * addedYRange\n      dispY2 += margins.top / (margins.bottom + margins.top) * addedYRange\n    }\n    dispXRange = (dispY2 - dispY1) * displayAspect\n    var xOffset = (margins.left - margins.right) / width\n    var xMidpoint = (xmax + xmin - dispXRange * xOffset) / 2\n    dispX1 = xMidpoint - dispXRange / 2\n    dispX2 = xMidpoint + dispXRange / 2\n  } else { // x-axis limiting\n    padding = paddingFactor * xRange\n    dispX1 = xmin - padding\n    dispX2 = xmax + padding\n    dispXRange = xRange + 2 * padding\n    var addedXRange = (width / usableWidth * dispXRange) - dispXRange\n    if (margins.left > 0 || margins.right > 0) {\n      dispX1 -= margins.left / (margins.left + margins.right) * addedXRange\n      dispX2 += margins.right / (margins.left + margins.right) * addedXRange\n    }\n\n    dispYRange = (dispX2 - dispX1) / displayAspect\n    var yOffset = (margins.bottom - margins.top) / height\n    var yMidpoint = (ymax + ymin - dispYRange * yOffset) / 2\n    dispY1 = yMidpoint - dispYRange / 2\n    dispY2 = yMidpoint + dispYRange / 2\n  }\n\n  return [\n    [dispX1, dispX2],\n    [dispY1, dispY2]\n  ]\n}\n\nfunction getMargins (options) {\n  var margins = {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  }\n\n  if (options && options.displayMargins) {\n    if (options.displayMargins.top) margins.top = options.displayMargins.top\n    if (options.displayMargins.bottom) margins.bottom = options.displayMargins.bottom\n    if (options.displayMargins.left) margins.left = options.displayMargins.left\n    if (options.displayMargins.right) margins.right = options.displayMargins.right\n  }\n\n  return margins\n}\n"]}