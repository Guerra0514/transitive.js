{"version":3,"sources":["polyline.js"],"names":["module","exports","decode","polyline","currentPosition","currentLat","currentLng","dataLength","length","polylineLatLngs","shift","result","byte","charCodeAt","deltaLat","deltLng","push"],"mappings":";;AAAA;;AAEAA,OAAOC,OAAP,CAAeC,MAAf,GAAwB,UAAUC,QAAV,EAAoB;AAC1C,MAAIC,kBAAkB,CAAtB;;AAEA,MAAIC,aAAa,CAAjB;AACA,MAAIC,aAAa,CAAjB;;AAEA,MAAIC,aAAaJ,SAASK,MAA1B;;AAEA,MAAIC,kBAAkB,EAAtB;;AAEA,SAAOL,kBAAkBG,UAAzB,EAAqC;AACnC,QAAIG,QAAQ,CAAZ;AACA,QAAIC,SAAS,CAAb;;AAEA,QAAIC,IAAJ;;AAEA,OAAG;AACDA,aAAOT,SAASU,UAAT,CAAoBT,iBAApB,IAAyC,EAAhD;AACAO,gBAAU,CAACC,OAAO,IAAR,KAAiBF,KAA3B;AACAA,eAAS,CAAT;AACD,KAJD,QAISE,QAAQ,IAJjB;;AAMA,QAAIE,WAAaH,SAAS,CAAV,GAAe,EAAEA,UAAU,CAAZ,CAAf,GAAiCA,UAAU,CAA3D;AACAN,kBAAcS,QAAd;;AAEAJ,YAAQ,CAAR;AACAC,aAAS,CAAT;;AAEA,OAAG;AACDC,aAAOT,SAASU,UAAT,CAAoBT,iBAApB,IAAyC,EAAhD;AACAO,gBAAU,CAACC,OAAO,IAAR,KAAiBF,KAA3B;AACAA,eAAS,CAAT;AACD,KAJD,QAISE,QAAQ,IAJjB;;AAMA,QAAIG,UAAYJ,SAAS,CAAV,GAAe,EAAEA,UAAU,CAAZ,CAAf,GAAiCA,UAAU,CAA1D;;AAEAL,kBAAcS,OAAd;;AAEAN,oBAAgBO,IAAhB,CAAqB,CAACX,aAAa,OAAd,EAAuBC,aAAa,OAApC,CAArB;AACD;AACD,SAAOG,eAAP;AACD,CAzCD","file":"polyline.js","sourcesContent":["/** TODO: use library? **/\n\nmodule.exports.decode = function (polyline) {\n  var currentPosition = 0\n\n  var currentLat = 0\n  var currentLng = 0\n\n  var dataLength = polyline.length\n\n  var polylineLatLngs = []\n\n  while (currentPosition < dataLength) {\n    var shift = 0\n    var result = 0\n\n    var byte\n\n    do {\n      byte = polyline.charCodeAt(currentPosition++) - 63\n      result |= (byte & 0x1f) << shift\n      shift += 5\n    } while (byte >= 0x20)\n\n    var deltaLat = ((result & 1) ? ~(result >> 1) : (result >> 1))\n    currentLat += deltaLat\n\n    shift = 0\n    result = 0\n\n    do {\n      byte = polyline.charCodeAt(currentPosition++) - 63\n      result |= (byte & 0x1f) << shift\n      shift += 5\n    } while (byte >= 0x20)\n\n    var deltLng = ((result & 1) ? ~(result >> 1) : (result >> 1))\n\n    currentLng += deltLng\n\n    polylineLatLngs.push([currentLat * 0.00001, currentLng * 0.00001])\n  }\n  return polylineLatLngs\n}\n"]}