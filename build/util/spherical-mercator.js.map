{"version":3,"sources":["spherical-mercator.js"],"names":["SphericalMercator","cache","D2R","Math","PI","R2D","A","MAXEXTENT","options","size","c","Bc","Cc","zc","Ac","d","push","prototype","px","ll","zoom","f","min","max","sin","x","round","y","log","g","lon","lat","atan","exp","bbox","tmsStyle","srs","pow","ur","concat","convert","xyz","pxll","pxur","bounds","minX","floor","minY","maxX","maxY","tms","to","forward","slice","inverse","xy","tan","module","exports"],"mappings":"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","file":"spherical-mercator.js","sourcesContent":["/** TODO: use library? **/\n\nvar SphericalMercator = (function () {\n  // Closures including constants and other precalculated values.\n  var cache = {}\n  // var EPSLN = 1.0e-10\n  var D2R = Math.PI / 180\n  var R2D = 180 / Math.PI\n    // 900913 properties.\n  var A = 6378137\n  var MAXEXTENT = 20037508.34\n\n  // SphericalMercator constructor: precaches calculations\n  // for fast tile lookups.\n  function SphericalMercator (options) {\n    options = options || {}\n    this.size = options.size || 256\n    if (!cache[this.size]) {\n      var size = this.size\n      var c = cache[this.size] = {}\n      c.Bc = []\n      c.Cc = []\n      c.zc = []\n      c.Ac = []\n      for (var d = 0; d < 30; d++) {\n        c.Bc.push(size / 360)\n        c.Cc.push(size / (2 * Math.PI))\n        c.zc.push(size / 2)\n        c.Ac.push(size)\n        size *= 2\n      }\n    }\n    this.Bc = cache[this.size].Bc\n    this.Cc = cache[this.size].Cc\n    this.zc = cache[this.size].zc\n    this.Ac = cache[this.size].Ac\n  }\n\n  // Convert lon lat to screen pixel value\n  //\n  // - `ll` {Array} `[lon, lat]` array of geographic coordinates.\n  // - `zoom` {Number} zoom level.\n  SphericalMercator.prototype.px = function (ll, zoom) {\n    var d = this.zc[zoom]\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999)\n    var x = Math.round(d + ll[0] * this.Bc[zoom])\n    var y = Math.round(d + 0.5 * Math.log((1 + f) / (1 - f)) * (-this.Cc[zoom]))\n    if (x > this.Ac[zoom]) x = this.Ac[zoom]\n    if (y > this.Ac[zoom]) y = this.Ac[zoom]\n    // (x < 0) && (x = 0);\n    // (y < 0) && (y = 0);\n    return [x, y]\n  }\n\n  // Convert screen pixel value to lon lat\n  //\n  // - `px` {Array} `[x, y]` array of geographic coordinates.\n  // - `zoom` {Number} zoom level.\n  SphericalMercator.prototype.ll = function (px, zoom) {\n    var g = (px[1] - this.zc[zoom]) / (-this.Cc[zoom])\n    var lon = (px[0] - this.zc[zoom]) / this.Bc[zoom]\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI)\n    return [lon, lat]\n  }\n\n  // Convert tile xyz value to bbox of the form `[w, s, e, n]`\n  //\n  // - `x` {Number} x (longitude) number.\n  // - `y` {Number} y (latitude) number.\n  // - `zoom` {Number} zoom.\n  // - `tms_style` {Boolean} whether to compute using tms-style.\n  // - `srs` {String} projection for resulting bbox (WGS84|900913).\n  // - `return` {Array} bbox array of values in form `[w, s, e, n]`.\n  SphericalMercator.prototype.bbox = function (x, y, zoom, tmsStyle, srs) {\n    // Convert xyz into bbox with srs WGS84\n    if (tmsStyle) {\n      y = (Math.pow(2, zoom) - 1) - y\n    }\n    // Use +y to make sure it's a number to avoid inadvertent concatenation.\n    var ll = [x * this.size, (+y + 1) * this.size] // lower left\n    // Use +x to make sure it's a number to avoid inadvertent concatenation.\n    var ur = [(+x + 1) * this.size, y * this.size] // upper right\n    var bbox = this.ll(ll, zoom).concat(this.ll(ur, zoom))\n\n    // If web mercator requested reproject to 900913.\n    if (srs === '900913') {\n      return this.convert(bbox, '900913')\n    } else {\n      return bbox\n    }\n  }\n\n  // Convert bbox to xyx bounds\n  //\n  // - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n  // - `zoom` {Number} zoom.\n  // - `tms_style` {Boolean} whether to compute using tms-style.\n  // - `srs` {String} projection of input bbox (WGS84|900913).\n  // - `@return` {Object} XYZ bounds containing minX, maxX, minY, maxY properties.\n  SphericalMercator.prototype.xyz = function (bbox, zoom, tmsStyle, srs) {\n    // If web mercator provided reproject to WGS84.\n    if (srs === '900913') {\n      bbox = this.convert(bbox, 'WGS84')\n    }\n\n    var ll = [bbox[0], bbox[1]] // lower left\n    var ur = [bbox[2], bbox[3]] // upper right\n    var pxll = this.px(ll, zoom)\n    var pxur = this.px(ur, zoom)\n    // Y = 0 for XYZ is the top hence minY uses px_ur[1].\n    var bounds = {\n      minX: Math.floor(pxll[0] / this.size),\n      minY: Math.floor(pxur[1] / this.size),\n      maxX: Math.floor((pxur[0] - 1) / this.size),\n      maxY: Math.floor((pxll[1] - 1) / this.size)\n    }\n    if (tmsStyle) {\n      var tms = {\n        minY: (Math.pow(2, zoom) - 1) - bounds.maxY,\n        maxY: (Math.pow(2, zoom) - 1) - bounds.minY\n      }\n      bounds.minY = tms.minY\n      bounds.maxY = tms.maxY\n    }\n    return bounds\n  }\n\n  // Convert projection of given bbox.\n  //\n  // - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n  // - `to` {String} projection of output bbox (WGS84|900913). Input bbox\n  //   assumed to be the \"other\" projection.\n  // - `@return` {Object} bbox with reprojected coordinates.\n  SphericalMercator.prototype.convert = function (bbox, to) {\n    if (to === '900913') {\n      return this.forward(bbox.slice(0, 2)).concat(this.forward(bbox.slice(\n        2,\n        4)))\n    } else {\n      return this.inverse(bbox.slice(0, 2)).concat(this.inverse(bbox.slice(\n        2,\n        4)))\n    }\n  }\n\n  // Convert lon/lat values to 900913 x/y.\n  SphericalMercator.prototype.forward = function (ll) {\n    var xy = [\n      A * ll[0] * D2R,\n      A * Math.log(Math.tan((Math.PI * 0.25) + (0.5 * ll[1] * D2R)))\n    ]\n    // if xy value is beyond maxextent (e.g. poles), return maxextent.\n    if (xy[0] > MAXEXTENT) xy[0] = MAXEXTENT\n    if (xy[0] < -MAXEXTENT) xy[0] = -MAXEXTENT\n    if (xy[1] > MAXEXTENT) xy[1] = MAXEXTENT\n    if (xy[1] < -MAXEXTENT) xy[1] = -MAXEXTENT\n    return xy\n  }\n\n  // Convert 900913 x/y values to lon/lat.\n  SphericalMercator.prototype.inverse = function (xy) {\n    return [\n      (xy[0] * R2D / A), ((Math.PI * 0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D\n    ]\n  }\n\n  return SphericalMercator\n})()\n\nif (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n  module.exports = exports = SphericalMercator\n}\n"]}