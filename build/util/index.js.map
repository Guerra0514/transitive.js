{"version":3,"sources":["index.js"],"names":["tolerance","fuzzyEquals","a","b","tol","Math","abs","distance","x1","y1","x2","y2","sqrt","getRadiusFromAngleChord","angleR","chordLen","sin","ccw","ax","ay","bx","by","cx","cy","raw","ccwRaw","angleFromThreePoints","c","acos","pointAlongArc","r","theta","t","rot","PI","vectToCenter","normalizeVector","rotateVector","x","y","vectFromCenter","negateVector","getVectorAngle","atan","rayIntersection","avx","avy","bvx","bvy","u","v","intersect","lineIntersection","x3","y3","x4","y4","d","parsePixelStyle","descriptor","parseFloat","substring","length","isOutwardVector","vector","cos","addVectors","v1","v2","otpModeToGtfsType","otpMode","renderDataToSvgPath","renderData","map","k","arc","radius","join","sm"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * General Transitive utilities library\n */\n\nimport SphericalMercator from 'sphericalmercator'\n\nvar tolerance = 0.000001\n\nfunction fuzzyEquals (a, b, tol) {\n  tol = tol || tolerance\n  return Math.abs(a - b) < tol\n}\n\nfunction distance (x1, y1, x2, y2) {\n  return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1))\n}\n\nfunction getRadiusFromAngleChord (angleR, chordLen) {\n  return (chordLen / 2) / Math.sin(angleR / 2)\n}\n\n/*\n * CCW utility function. Accepts 3 coord pairs; result is positive if points\n * have counterclockwise orientation, negative if clockwise, 0 if collinear.\n */\n\nfunction ccw (ax, ay, bx, by, cx, cy) {\n  var raw = ccwRaw(ax, ay, bx, by, cx, cy)\n  return (raw === 0) ? 0 : raw / Math.abs(raw)\n}\n\nfunction ccwRaw (ax, ay, bx, by, cx, cy) {\n  return (bx - ax) * (cy - ay) - (cx - ax) * (by - ay)\n}\n\n/*\n * Compute angle formed by three points in cartesian plane using law of cosines\n */\n\nfunction angleFromThreePoints (ax, ay, bx, by, cx, cy) {\n  var c = distance(ax, ay, bx, by)\n  var a = distance(bx, by, cx, cy)\n  var b = distance(ax, ay, cx, cy)\n  return Math.acos((a * a + c * c - b * b) / (2 * a * c))\n}\n\nfunction pointAlongArc (x1, y1, x2, y2, r, theta, ccw, t) {\n  ccw = Math.abs(ccw) / ccw // convert to 1 or -1\n\n  var rot = Math.PI / 2 - Math.abs(theta) / 2\n  var vectToCenter = normalizeVector(rotateVector({\n    x: x2 - x1,\n    y: y2 - y1\n  }, ccw * rot))\n\n  // calculate the center of the arc circle\n  var cx = x1 + r * vectToCenter.x\n  var cy = y1 + r * vectToCenter.y\n\n  var vectFromCenter = negateVector(vectToCenter)\n  rot = Math.abs(theta) * t * ccw\n  vectFromCenter = normalizeVector(rotateVector(\n    vectFromCenter, rot))\n\n  return {\n    x: cx + r * vectFromCenter.x,\n    y: cy + r * vectFromCenter.y\n  }\n}\n\nfunction getVectorAngle (x, y) {\n  var t = Math.atan(y / x)\n\n  if (x < 0 && t <= 0) t += Math.PI\n  else if (x < 0 && t >= 0) t -= Math.PI\n\n  return t\n}\n\nfunction rayIntersection (ax, ay, avx, avy, bx, by, bvx, bvy) {\n  var u = ((by - ay) * bvx - (bx - ax) * bvy) / (bvx * avy - bvy * avx)\n  var v = ((by - ay) * avx - (bx - ax) * avy) / (bvx * avy - bvy * avx)\n\n  return {\n    u: u,\n    v: v,\n    intersect: (u > -tolerance && v > -tolerance)\n  }\n}\n\nfunction lineIntersection (x1, y1, x2, y2, x3, y3, x4, y4) {\n  var d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4)\n\n  if (d === 0) { // lines are parallel\n    return {\n      intersect: false\n    }\n  }\n\n  return {\n    x: ((x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)) / d,\n    y: ((x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)) / d,\n    intersect: true\n  }\n}\n\n/**\n * Parse a pixel-based style descriptor, returning an number.\n *\n * @param {String/Number}\n */\n\nfunction parsePixelStyle (descriptor) {\n  if (typeof descriptor === 'number') return descriptor\n  return parseFloat(descriptor.substring(0, descriptor.length - 2), 10)\n}\n\nfunction isOutwardVector (vector) {\n  if (!fuzzyEquals(vector.x, 0)) return (vector.x > 0)\n  return (vector.y > 0)\n}\n\n/**\n * vector utilities\n */\n\nfunction normalizeVector (v) {\n  var d = Math.sqrt(v.x * v.x + v.y * v.y)\n  return {\n    x: v.x / d,\n    y: v.y / d\n  }\n}\n\nfunction rotateVector (v, theta) {\n  return {\n    x: v.x * Math.cos(theta) - v.y * Math.sin(theta),\n    y: v.x * Math.sin(theta) + v.y * Math.cos(theta)\n  }\n}\n\nfunction negateVector (v) {\n  return {\n    x: -v.x,\n    y: -v.y\n  }\n}\n\nfunction addVectors (v1, v2) {\n  return {\n    x: v1.x + v2.x,\n    y: v1.y + v2.y\n  }\n}\n\n/**\n * GTFS utilities\n */\n\nfunction otpModeToGtfsType (otpMode) {\n  switch (otpMode) {\n    case 'TRAM':\n      return 0\n    case 'SUBWAY':\n      return 1\n    case 'RAIL':\n      return 2\n    case 'BUS':\n      return 3\n    case 'FERRY':\n      return 4\n    case 'CABLE_CAR':\n      return 5\n    case 'GONDOLA':\n      return 6\n    case 'FUNICULAR':\n      return 7\n  }\n}\n\n// Rendering utilties\n\nfunction renderDataToSvgPath (renderData) {\n  return renderData.map((d, k) => {\n    if (k === 0) return `M${d.x} ${d.y}`\n    if (d.arc) return `A${d.radius} ${d.radius} ${d.arc} 0 ${d.arc > 0 ? 0 : 1} ${d.x} ${d.y}`\n    return `L${d.x} ${d.y}`\n  }).join(' ')\n}\n\n// An instance of the SphericalMercator converter\nconst sm = new SphericalMercator()\n\nexport {\n  fuzzyEquals,\n  distance,\n  getRadiusFromAngleChord,\n  ccw,\n  ccwRaw,\n  angleFromThreePoints,\n  pointAlongArc,\n  getVectorAngle,\n  rayIntersection,\n  lineIntersection,\n  parsePixelStyle,\n  isOutwardVector,\n  normalizeVector,\n  rotateVector,\n  negateVector,\n  addVectors,\n  otpModeToGtfsType,\n  renderDataToSvgPath,\n  sm\n}\n"]}